name: generate-uuid

on:
  issues:
    types: [opened, edited]

permissions:
  issues: write
  contents: read

jobs:
  upload_selfie:
    runs-on: ubuntu-latest
    steps:

      - name: Mostrar el body completo del issue (debug)
        run: |
          echo "------ Body completo ------"
          echo "${{ github.event.issue.body }}"

      - name: Extraer datos del Issue Form
        id: extract
        run: |
          LINK=$(echo "${{ github.event.issue.body }}" | grep '^image_link:' | grep -oE 'https?://[^ )\n\r]*')
          EMAIL=$(echo "${{ github.event.issue.body }}" | grep '^email:' | awk '{print $2}')
          COUNTRY=$(echo "${{ github.event.issue.body }}" | grep '^country:' | awk '{print $2}')
          ENVIRONMENT=$(echo "${{ github.event.issue.body }}" | grep '^environment:' | awk '{print $2}')
          echo "Link: $LINK"
          echo "Email: $EMAIL"
          echo "Country: $COUNTRY"
          echo "Environment: $ENVIRONMENT"
          echo "link=$LINK" >> $GITHUB_OUTPUT
          echo "email=$EMAIL" >> $GITHUB_OUTPUT
          echo "country=$COUNTRY" >> $GITHUB_OUTPUT
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

      - name: Descargar imagen
        run: |
          echo "Usando link: ${{ steps.extract.outputs.link }}"
          curl -L "${{ steps.extract.outputs.link }}" -o selfie.jpg

      - name: Mostrar detalles del archivo descargado
        run: |
          file selfie.jpg
          ls -lh selfie.jpg

      - name: Convertir imagen a base64 y guardar en output
        id: tobase64
        run: |
          B64=$(base64 -w 0 selfie.jpg)
          echo "b64=$B64" >> $GITHUB_OUTPUT

      - name: Comentar resultado en el issue (éxito)
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "✅ Selfie subida exitosamente para **${{ steps.extract.outputs.email }}**, país: **${{ steps.extract.outputs.country }}**, ambiente: **${{ steps.extract.outputs.environment }}**."
            })

      - name: Comentar error en el issue
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "❌ Hubo un error procesando la selfie. Revisá el link y los datos, editá el issue si es necesario y volvé a intentar."
            })

      - name: Cerrar el issue (solo si fue exitoso)
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "closed"
            })
